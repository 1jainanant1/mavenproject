pipeline
{agent any
stages
{
stage('scm checkout')
{ steps { git branch: 'master', url: 'https://github.com/prakashk0301/mavenproject.git' }}


stage('compile the job')    //validate then compile
{steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MVN_HOME', mavenSettingsConfig: '', traceability: true) {
    sh 'mvn compile'
} }}

stage('execute unit test framework')    
{steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MVN_HOME', mavenSettingsConfig: '', traceability: true) {
    sh 'mvn test'
} }}

stage('build the code')    
{steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MVN_HOME', mavenSettingsConfig: '', traceability: true) {
    sh 'mvn clean -B -DskipTests package'
} }}

stage('docker image create')
{steps { sh 'docker build -t 058264063726.dkr.ecr.ap-southeast-1.amazonaws.com/myimage:latest .' }}

stage ('push docker image to ECR')
{steps { withDockerRegistry(credentialsId: 'ecr:ap-southeast-1:awscicd', url: 'https://058264063726.dkr.ecr.ap-southeast-1.amazonaws.com') 
  {
    sh 'docker push 058264063726.dkr.ecr.ap-southeast-1.amazonaws.com/myimage:latest '
  } }}

stage('deploy-to-eks')
{ steps { withAWS(credentials: 'awscicd', region: 'ap-southeast-1') 
{
    sh 'kubectl apply -f deployment-service.yaml'
} }}

}
}
