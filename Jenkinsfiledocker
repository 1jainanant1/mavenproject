pipeline
{
agent any
stages
{
 stage('scm checkout')
 { 
  steps { git branch: 'master', url: 'https://github.com/prakashk0301/mavenproject' }}

 stage('code compile')
 { 
steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MVN_HOME', mavenSettingsConfig: '', traceability: true)  {
	sh 'mvn compile'
 } }}

  stage('execute unit test framework')
 {
   steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MVN_HOME', mavenSettingsConfig: '', traceability: true)  {
	sh 'mvn test'
 } }}

   stage('code build')
 {
   steps { withMaven(globalMavenSettingsConfig: '', jdk: 'JDK_HOME', maven: 'MVN_HOME', mavenSettingsConfig: '', traceability: true)  {
	sh 'mvn clean -B -DskipTests package'
 } }}


 stage('build docker image')
 {steps { sh 'docker build -t 058264063726.dkr.ecr.ap-southeast-1.amazonaws.com/devops/july:latest .' }}

 stage('push docker image to AWS ECR')
 {steps { 
withDockerRegistry(credentialsId: 'ecr:ap-southeast-1:awscicd', url: 'https://058264063726.dkr.ecr.ap-southeast-1.amazonaws.com/devops/july') 
{
    sh 'docker push 058264063726.dkr.ecr.ap-southeast-1.amazonaws.com/devops/july:latest'
} }}

 stage('deploy to k8s')
{steps { withKubeConfig(caCertificate: '', clusterName: 'my-eks', contextName: 'arn:aws:eks:ap-southeast-1:058264063726:cluster/my-eks', credentialsId: 'ekscred', namespace: '', restrictKubeConfigAccess: false, serverUrl: 'https://37ECECD4BC5BDCAB891B5B5363227D4D.gr7.ap-southeast-1.eks.amazonaws.com') {
    sh 'kubectl apply -f myapp-kubernetes.yaml'
} } }



}
}
